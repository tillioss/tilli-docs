"use strict";(self.webpackChunktilli_docs=self.webpackChunktilli_docs||[]).push([[8134],{3905:(e,t,r)=>{r.d(t,{Zo:()=>d,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=u(r),m=o,f=p["".concat(s,".").concat(m)]||p[m]||c[m]||a;return r?n.createElement(f,i(i({ref:t},d),{},{components:r})):n.createElement(f,i({ref:t},d))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},8997:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=r(7462),o=(r(7294),r(3905));const a={id:"Repo-ML"},i="Tilli-Machine-Learning",l={unversionedId:"Repo-ML",id:"Repo-ML",title:"Tilli-Machine-Learning",description:"Intro",source:"@site/docs/Repo-ML.md",sourceDirName:".",slug:"/Repo-ML",permalink:"/docs/Repo-ML",draft:!1,tags:[],version:"current",frontMatter:{id:"Repo-ML"},sidebar:"tutorialSidebar",previous:{title:"IDE + Web App: (Backend + Frontend Developers)",permalink:"/docs/Repo-Ide"},next:{title:"User Getting Started",permalink:"/docs/User-Getting-Started"}},s={},u=[{value:"Intro",id:"intro",level:3},{value:"Install &amp; Run",id:"install--run",level:3},{value:"How to use this repository",id:"how-to-use-this-repository",level:4},{value:"How to Give Feedback or Report Bugs",id:"how-to-give-feedback-or-report-bugs",level:3},{value:"Join our Slack Community",id:"join-our-slack-community",level:3}],d={toc:u};function c(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"tilli-machine-learning"},"Tilli-Machine-Learning"),(0,o.kt)("h3",{id:"intro"},"Intro"),(0,o.kt)("p",null,"This repository contains code for running a machine learning model server using Docker and Python. The server serves predictions based on a trained logistic regression model. It also includes tests, a client server for manual testing, and additional files needed at runtime."),(0,o.kt)("h3",{id:"install--run"},"Install & Run"),(0,o.kt)("p",null,"To run the server with the machine learning model, follow these steps:"),(0,o.kt)("p",null,"Build the Docker image using the provided Dockerfile docker build -t ml-model-server .\nRun the Docker container to start the server on port 8080. docker run -p 8080:8080 ml-model-server"),(0,o.kt)("h4",{id:"how-to-use-this-repository"},"How to use this repository"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"The tests are located in the tests folder and are executed via the CI/CD pipeline set up in the test.yml file located in the workflows folder (using GitHub Actions). To add new tests, create a new file in the tests folder and add the relevant test cases. Currently, the file tests/test_server.py is created for testing the server.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"To train a new model, create a folder named data and add a JSON file (data_1.json) with the required data. (Note: The file format may be updated in the future.)")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"The client/client.py file contains a client server that can be used for manual testing of the server. Modify the url, emotion, and feedback variables to match your server's endpoint and the desired input values.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"The models folder contains additional information and files needed at runtime. Currently, the following files are included:"))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"logreg_model.joblib: A logistic regression model trained with the data."),(0,o.kt)("li",{parentName:"ul"},"col_names.pk1: Column names of the original dataset.")),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},"The src/model_dev.py file demonstrates the model development process. It includes the following steps:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Load the data using the data_etl() function from the src/util.py file."),(0,o.kt)("li",{parentName:"ul"},"Convert categorical columns to one-hot encoded columns."),(0,o.kt)("li",{parentName:"ul"},"Separate the input features and target variable."),(0,o.kt)("li",{parentName:"ul"},"Create and train a logistic regression model."),(0,o.kt)("li",{parentName:"ul"},"Predict the activity for a given emotion and feedback."),(0,o.kt)("li",{parentName:"ul"},"Save the trained model and the column names for future use.")),(0,o.kt)("ol",{start:6},(0,o.kt)("li",{parentName:"ol"},"Utility functions are stored in the src/util.py file. These functions include:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"categorical_to_numeric_df(): Converts categorical values to a numeric range."),(0,o.kt)("li",{parentName:"ul"},"visualize(): Visualizes the spread of user interactions."),(0,o.kt)("li",{parentName:"ul"},"data_etl(): Loads and preprocesses the data.")),(0,o.kt)("ol",{start:7},(0,o.kt)("li",{parentName:"ol"},"The src/model_evaluation.py file is under development and contains code to evaluate the performance of different models.")),(0,o.kt)("p",null,"Feel free to explore the repository and adapt it to your needs."),(0,o.kt)("h3",{id:"how-to-give-feedback-or-report-bugs"},"How to Give Feedback or Report Bugs"),(0,o.kt)("p",null,"Kindly go to the \u201cReport Bugs, Issues or Share Feedback\u201d Section in our Contribution Guidelines for filing any issue/bugs, feedback, to clarify doubts or propose a new feature through our GitHub forms."),(0,o.kt)("h3",{id:"join-our-slack-community"},"Join our Slack Community"),(0,o.kt)("p",null,"Join our Slack community to connect with other members, ask questions, and collaborate on projects. ",(0,o.kt)("a",{parentName:"p",href:"https://tilliopensour-wyp9205.slack.com/join/shared_invite/zt-206f4f11s-HoII8Kob45f6WK3GPIIi6g#/shared-invite/email"},"Slack Invite Link")))}c.isMDXComponent=!0}}]);